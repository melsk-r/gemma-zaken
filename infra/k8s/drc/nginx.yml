# NOTE: this currently does not work on Haven v1.0 because of limited PV options
#
# We need ReadWriteMany on the PV(C) so that the nginx container can access the
# DRC container private media files to make use of the sendfile machinery.
#
# Currently solved by letting Django serve the files directly.

# ---

# # Deployment

# kind: Deployment
# apiVersion: apps/v1
# metadata:
#   name: {{ service.name }}-nginx
#   namespace: zgw
#   labels:
#     k8s-app: {{ service.name }}-nginx
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       k8s-app: {{ service.name }}-nginx
#   template:
#     metadata:
#       name: {{ service.name }}-nginx
#       labels:
#         k8s-app: {{ service.name }}-nginx
#     spec:
#       containers:
#       - name: {{ service.name }}-nginx
#         image: nginx:1.15
#         resources:
#           requests:
#             memory: "10Mi"
#             cpu: "5m"
#           limits:
#             memory: "100Mi"
#             cpu: "200m"
#         readinessProbe:
#           httpGet:
#             path: /
#             port: 80
#         livenessProbe:
#           httpGet:
#             path: /
#             port: 80
#         volumeMounts:
#           - name: private-storage-nginx
#             mountPath: /private-media
#           - name: {{ service.name }}-nginx-config
#             mountPath: /etc/nginx/conf.d/
#       volumes:
#       - name: private-storage-nginx
#         persistentVolumeClaim:
#           claimName: {{ service.name }}-private-media
#       - name: {{ service.name }}-nginx-config
#         configMap:
#           name: {{ service.name }}-nginx-config

# ---

# # ConfigMap to override nginx conf

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: {{ service.name }}-nginx-config
#   namespace: zgw
# data:
#   proxy: >
#     proxy_pass http://{{ service.name }}:8000;
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#   default.conf: >
#     server {
#         listen       80;
#         server_name  localhost;

#         location / {
#             include conf.d/proxy;

#             location /api/v1/enkelvoudiginformatieobjecten {
#                 client_max_body_size {{ service.min_upload_size }};
#                 include conf.d/proxy;
#             }
#         }

#         location /private-media {
#             internal;
#             alias /private-media;
#         }

#         error_page  404              /404.html;
#         error_page  413              /413.json;
#         error_page   500 502 503 504  /500.json;
#     }

# ---

# # Service

# kind: Service
# apiVersion: v1
# metadata:
#   name: {{ service.name }}-nginx
#   namespace: zgw
#   labels:
#     k8s-app: {{ service.name }}-nginx
# spec:
#   selector:
#     k8s-app: {{ service.name }}-nginx
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 80
