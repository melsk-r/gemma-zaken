---

apiVersion: v1
kind: Namespace
metadata:
  name: zgw

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ service.pvc_name }}-pvc
  namespace: zgw
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---

# Deployment

kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ service.name }}
  namespace: zgw
  labels:
    k8s-app: {{ service.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: {{ service.name }}
  template:
    metadata:
      name: {{ service.name }}
      labels:
        k8s-app: {{ service.name }}
    spec:
      volumes:
        - name: storage
          persistentVolumeClaim:
           claimName: {{ service.pvc_name }}-pvc
        - name: {{ service.name }}-initdb
          configMap:
            name: {{ service.name }}-initdb-config

      containers:
        - name: postgres
          image: mdillon/postgis:11
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ service.name }}-secrets
                  key: DB_PASSWORD
          volumeMounts:
            - name: storage
              mountPath: "/var/lib/postgresql/data"
              subPath: zgw/{{ service.sub_path }}
            - name: {{ service.name }}-initdb
              mountPath: /docker-entrypoint-initdb.d

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ service.name }}-initdb-config
  namespace: zgw
data:
  initdb.sql: |
    {% for db in service.databases -%}
    CREATE DATABASE "{{ db }}";
    {% endfor %}

---

# Service

kind: Service
apiVersion: v1
metadata:
  name: {{ service.name }}
  namespace: zgw
  labels:
    k8s-app: {{ service.name }}
spec:
  selector:
    k8s-app: {{ service.name }}
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
